!function (t, e) {
    "object" == typeof exports && "undefined" != typeof module
        ? module.exports = e()
        : "function" == typeof define && define.amd
            ? define(e)
            : t.$ = e()
}(this, function () {
    "use strict";
    Array.prototype.forEach || (Array.prototype.forEach = function (t, e) {
        var n,
            r;
        if (null == this) 
            throw new TypeError(" this is null or not defined");
        var i = Object(this),
            o = i.length >>> 0;
        if ("function" != typeof t) 
            throw new TypeError(t + " is not a function");
        for (1 < arguments.length && (n = e), r = 0; r < o;) {
            var u;
            r in i && (u = i[r], t.call(n, u, r, i)),
            r++
        }
    });
    var t = function () {
        function r(t, e) {
            for (var n = 0; n < e.length; n++) {
                var r = e[n];
                r.enumerable = r.enumerable || !1,
                r.configurable = !0,
                "value" in r && (r.writable = !0),
                Object.defineProperty(t, r.key, r)
            }
        }
        return function (t, e, n) {
            return e && r(t.prototype, e),
            n && r(t, n),
            t
        }
    }();
    var e = function () {
        function n(t) {
            !function (t, e) {
                if (!(t instanceof e)) 
                    throw new TypeError("Cannot call a class as a function")
            }(this, n);
            var e = void 0;
            e = "string" == typeof t
                ? document.querySelectorAll(t)
                : "array" == typeof t || t.length
                    ? t
                    : [t],
            this.$el = []
                .slice
                .call(e)
        }
        return t(n, [
            {
                key: "on",
                value: function (e, n) {
                    var r = 2 < arguments.length && void 0 !== arguments[2] && arguments[2];
                    return this
                        .$el
                        .forEach(function (t) {
                            t.addEventListener(e, n, !r)
                        }),
                    this
                }
            }, {
                key: "un",
                value: function (e, n) {
                    var r = 2 < arguments.length && void 0 !== arguments[2] && arguments[2];
                    return this
                        .$el
                        .forEach(function (t) {
                            t.removeEventListener(e, n, !r)
                        }),
                    this
                }
            }, {
                key: "ac",
                value: function (e) {
                    return this
                        .$el
                        .forEach(function (t) {
                            t
                                .classList
                                .add(e)
                        }),
                    this
                }
            }, {
                key: "rc",
                value: function (e) {
                    return this
                        .$el
                        .forEach(function (t) {
                            t
                                .classList
                                .remove(e)
                        }),
                    this
                }
            }, {
                key: "tc",
                value: function (e) {
                    return this
                        .$el
                        .forEach(function (t) {
                            t
                                .classList
                                .toggle(e)
                        }),
                    this
                }
            }, {
                key: "cc",
                value: function (e) {
                    var n = !1;
                    return this
                        .$el
                        .forEach(function (t) {
                            t
                                .classList
                                .contains(e) && (n = !0)
                        }),
                    n
                }
            }, {
                key: "css",
                value: function (n) {
                    return this
                        .$el
                        .forEach(function (e) {
                            Object
                                .keys(n)
                                .forEach(function (t) {
                                    e.style[t] = n[t]
                                })
                        }),
                    this
                }
            }, {
                key: "val",
                value: function (t) {
                    return t
                        ? (this.$el[0].value = t, this)
                        : this.$el[0].value
                }
            }, {
                key: "html",
                value: function (e) {
                    return e
                        ? (this.$el.forEach(function (t) {
                            t.innerHTML = e
                        }), this)
                        : this.$el[0].innerHTML
                }
            }, {
                key: "attr",
                value: function (e, n) {
                    return e && !n
                        ? this
                            .$el[0]
                            .getAttribute(e)
                        : (this.$el.forEach(function (t) {
                            t.setAttribute(e, n)
                        }), this)
                }
            }, {
                key: "serializeObject",
                value: function () {
                    var e = {};
                    return this
                        .$el[0]
                        .querySelectorAll("input")
                        .forEach(function (t) {
                            "radio" == o(t).attr("type")
                                ? t.checked && (e[o(t).attr("name")] = o(t).attr("value"))
                                : "checkbox" == o(t).attr("type")
                                    ? t.checked && (e[o(t).attr("name")]
                                        ? e[o(t).attr("name")].push(o(t).attr("value"))
                                        : e[o(t).attr("name")] = [o(t).attr("value")])
                                    : e[o(t).attr("name")] = o(t).val()
                        }),
                    e
                }
            }, {
                key: "parent",
                value: function () {
                    return o(this.$el[0].parentNode)
                }
            }, {
                key: "siblings",
                value: function () {
                    for (var t = this.$el[0], e = [], n = t.parentNode.children, r = 0, i = n.length; r < i; r++) 
                        n[r] !== t && e.push(n[r]);
                    return o(e)
                }
            }, {
                key: "getDom",
                value: function () {
                    return this.$el[0]
                }
            }, {
                key: "getDomList",
                value: function () {
                    return this.$el
                }
            }, {
                key: "each",
                value: function (e) {
                    this
                        .$el
                        .forEach(function (t) {
                            e(t)
                        })
                }
            }, {
                key: "append",
                value: function (e) {
                    return e = r(e)
                        ? e.getDom()
                        : e,
                    this
                        .$el
                        .forEach(function (t) {
                            return t.appendChild(e)
                        }),
                    this
                }
            }, {
                key: "appendTo",
                value: function (e) {
                    return e = r(e)
                        ? e.getDom()
                        : e,
                    this
                        .$el
                        .forEach(function (t) {
                            return e.appendChild(t)
                        }),
                    this
                }
            }
        ]),
        n
    }();
    function r(t) {
        return "TinyJquery" == t.constructor.name
    }
    function o(t) {
        return new e(t)
    }
    return o
});
